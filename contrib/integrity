#!/usr/local/bin/bash
#set -x

# TODO:
# 1) EXCLUDE FILES
# mtree -X exclude-list
# The specified file contains fnmatch(3) patterns matching files to be
# excluded from the specifi‐ cation, one to a line.  If the pattern
# contains a ‘/’ character, it will be matched against entire pathnames
# (relative to the starting directory); otherwise, it will be matched
# against basenames only.  No comments are allowed in the exclude-list
# file.
# hashdeep -f <file>
#Takes a list of files to be hashed from the specified file. Each line
#is assumed to be a filename. This flag can only be used once per
#invocation. If it's used a second time, the second instance will
#clobber the first. Note that you can still use other flags, such as
#the -m or -x modes, and submit additional FILES on the command line.

# NOTES:
# Files not included in hash-files will be listed (VERBOSE only)
# Changed files in the hash-files will be listed (hash error)

# CONFIGURATION:
# Ubuntu configuration
# HASHDEEP="/usr/bin/hashdeep"
# HASHDEEPCONF="-w -o f -l -r -x -k"
# MTREE="/usr/bin/fmtree"
# FreeBSD configration
HASHDEEP="/usr/local/bin/md5deep"
HASHDEEPCONF="-w -o f -l -r -x"
MTREE="/usr/sbin/mtree"
# General configuration
LINKDIR="/integrity/link"
METADIR="/integrity/meta"
EXTHASH="hashdeep"
EXTMTREE="mtree"
EXTEXCLUDE="exclude"
# default set of keywords are flags, gid, link, mode, nlink, size, time, and uid
MTREEKEYS="-k gid,link,mode,nlink,size,time,uid"

[ -f /etc/integrity ] && . /etc/integrity
[ -f ~/.integrity ] && . ~/.integrity

USAGE="$(basename "$0") [-h|--help] [-s|--silent] [-c|--commands] [-r|--recreate] [-l|--list]
          [-a|--all|<client>] -- check integrity
where:
    -h --help             show this help
    -s --silent           report errors only
    -c --commands         list commands to create the hash and mtree files
    -r --recreate         recreate the hash and mtree files of all clients
    -l --list             list clients
    -a --all              check integrity of all clients
    <client>              check integrity of client"

EXPECTED_ARGS=1
if [ $# -lt $EXPECTED_ARGS ]; then
    echo "$USAGE"
    exit
fi

function check-integrity {
	 (($VERBOSE)) && printf "[OK] integrity: *** $CLIENT check started\n"
	 if LOG=$(cd $LINKDIR; $HASHDEEP $HASHDEEPCONF $METADIR/$CLIENT.$EXTHASH $CLIENT/ 2>&1); then
	     (($VERBOSE)) && printf "[OK] integrity: $CLIENT hash correct\n"
	     (($VERBOSE)) && [[ ! -z $LOG ]] && printf "[OK] integrity: hashdeep: $LOG\n"
	 else
	     printf "[ERR] integrity: $CLIENT hash error $?\n"
	     printf "[ERR] integrity: hashdeep: $LOG\n"
	 fi
	 if LOG=$(cd $LINKDIR; $MTREE -f $METADIR/$CLIENT.$EXTMTREE -p $CLIENT/ 2>&1); then
	     (($VERBOSE)) && printf "[OK] integrity: $CLIENT mtree correct\n"
	     (($VERBOSE)) && [[ ! -z $LOG ]] && printf "[OK] integrity: mtree: $LOG\n"
	 else
	     printf "[ERR] integrity: $CLIENT mtree error $?\n"
	     printf "[ERR] integrity: mtree: $LOG\n"
	 fi
}

VERBOSE=1
CLIENTS=$(cd $METADIR;ls -1 *.$EXTHASH | rev | cut -d'.' -f2- | rev)
for i in "$@"; do
    case $i in
	-h|--help)
	    echo "$USAGE"
	    exit
	    ;;
	-l|--list)
	    printf "$CLIENTS\n"
	    exit
	    ;;
	-c|--commands)
	    printf "Commands to create the hash adn mtree files:\n"
	    for i in $CLIENTS; do
		printf "cd $LINKDIR; $HASHDEEP -e -o f -l -r $i/ > $METADIR/$i.$EXTHASH\n"
		printf "cd $LINKDIR; $MTREE $MTREEKEYS -c -p $i/ > $METADIR/$i.$EXTMTREE\n"
		printf "\n"
	    done
	    exit
	    ;;
	-r|--recreate)
	    for i in $CLIENTS; do
		(($VERBOSE)) && printf "[OK] integrity: Recreate $METADIR/$i.$EXTHASH started\n"
		cd $LINKDIR; $HASHDEEP -e -o f -l -r $i/ > $METADIR/$i.$EXTHASH
		(($VERBOSE)) && printf "[OK] integrity: Recreate $METADIR/$i.$EXTHASH finished\n"
		(($VERBOSE)) && printf "[OK] integrity: Recreate $METADIR/$i.$EXTMTREE started\n"
		cd $LINKDIR; $MTREE $MTREEKEYS -c -p $i/ > $METADIR/$i.$EXTMTREE
		(($VERBOSE)) && printf "[OK] integrity: Recreating $METADIR/$i.$EXTMTREE finished\n"
	    done
	    exit
	    ;;
	-s|--silent)
	    VERBOSE=0
	    ;;
	-a|--all)
	    for CLIENT in $CLIENTS; do
		check-integrity
	    done
	    ;;
	*)
	    if [[ $CLIENTS =~ $i ]] ; then
		CLIENT=$i
		check-integrity
	    else
		printf "[ERR] integrity: Unknown client $i\n"
	    fi
	    ;;
    esac
done

exit
