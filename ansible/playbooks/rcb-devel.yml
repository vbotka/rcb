---

- hosts: rcb-devel
  become: true
  become_method: sudo

  vars:
    bin_dir: /root/bin
    bin_items: {}
    source_path: /scratch/rcb/ # If rcb is a symbolic link trailing slash is needed
    source_dest: /usr/local/src/rcb-current
    source_link: /usr/local/src/rcb
    source_lock: /usr/local/src/rcb-current.lock
    source_lock_set: true


  tasks:

    - name: "Install rsync (FreeBSD)"
      community.general.pkgng:
        name: "{{ item }}"
      with_items:
        - rsync
      when: ansible_os_family == 'FreeBSD'

    - name: "Install rsync (Debian)"
      ansible.builtin.apt:
        name: "{{ item }}"
      with_items:
       - rsync
      when: ansible_os_family == 'Debian'

    - name: "Install rsync (RedHat)"
      ansible.builtin.yum:
        name: "{{ item }}"
      with_items:
        - rsync
      when: ansible_os_family == 'RedHat'

    - name: "Copy current source to {{ source_dest }}"
      ansible.posix.synchronize:
        src: "{{ source_path }}"
        dest: "{{ source_dest }}"
        rsync_opts:
          - '--no-motd'
          - '--exclude=.git'

    - name: "Create symbolic link to {{ source_dest }}"
      ansible.builtin.file:
        state: link
        src: "{{ source_dest }}"
        dest: "{{ source_link }}"
        force: true

    - name: "Lock development version {{ source_lock_set }}"
      command: "touch {{ source_lock }}"
      args:
        creates: "{{ source_lock }}"
        warn: false
      when: source_lock_set|bool
      # Ignore warning. Module file does not work as described.
      #     file: >
      #       path="{{ source_lock }}"
      #       state="touch"

    - name: "Unlock development version {{ not source_lock_set }}"
      command: "rm {{ source_lock }}"
      args:
        removes: "{{ source_lock }}"
        warn: false
      when: not source_lock_set|bool
      # Ignore warning. Module file does not work as described.
      #     file: >
      #       path="{{ source_lock }}"
      #       state="absent"

# EOF
...
