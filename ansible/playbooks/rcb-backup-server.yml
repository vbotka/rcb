---

- hosts: backup.example.com
  connection: ssh
  become: true
  become_user: root
  become_method: sudo

  vars_files:
        - ~/.ansible/vars/rcb-backup-server.yml

#  vars:
#    rcb_bck_shell: /bin/bash
#    rcb_bck_dst: /scratch/rcb
#    rcb_bck_user: rcbackup
#    rcb_bck_group: rcbackup
#
# Config parameter BCK_DST will be replaced by rcb_BCK_DST/ansible_hostname

  tasks:

    - name: "Create user {{ rcb_bck_user }}"
      ansible.builtin.user:
        name: "{{ rcb_bck_user }}"
        shell: "{{ rcb_bck_shell }}"
      register: rcbuser
      
    - name: "Create directory for encrypted backups {{ rcb_bck_dst }}"
      ansible.builtin.file:
        state: directory
        path: "{{ rcb_bck_dst }}"
      
    - name: "Change owner and permissions of {{ rcb_bck_dst }} to {{ rcb_bck_user }} 0700"
      ansible.builtin.file:
        path: "{{ rcb_bck_dst }}"
        owner: "{{ rcb_bck_user }}"
        group: "{{ rcb_bck_group }}"
        mode: '0700'

    - name: "Debug Public keys"
      ansible.builtin.debug:
        msg: "Public key {{ item }}"
      with_fileglob:
        - "/tmp/{{ inventory_hostname }}/*.id_rsa.pub"

    - name: "Set up authorized_keys for {{ rcb_bck_user }}
             to {{ rcb_root_public_keys_dir }}/{{ inventory_hostname }}"
      ansible.posix.authorized_key:
        user: "{{ rcb_bck_user }}"
        key: "{{ lookup('file', '{{ item }}')}}"
      with_fileglob:
        - "{{ rcb_root_public_keys_dir }}/{{ inventory_hostname }}/*.id_rsa.pub"

# EOF
...
