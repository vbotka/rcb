BCK_HOST="backup.example.com"
BCK_USER="admin"
BCK_DST="~/backup"

RCB_HOST="srv.example.com"
RCB_EMAIL="admin"

RCB_BCK_ROOT="/backup"
RCB_BCK_PREFIX="$RCB_HOST/snapshots/hourly.0"
RCB_ENC="$RCB_BCK_ROOT/enc"
RCB_ENCR="$RCB_BCK_ROOT/enc.restored"
RCB_DEC="$RCB_BCK_ROOT/dec"
RCB_META="$RCB_BCK_ROOT/meta"

RCB_RST_ROOT="/restore"

# THE TRIM OPTION. When running rsyncrypto in recursive mode, the
# directory structure under srcdir is re-created under dstdir, with
# one directory stripped from the path.
#
# path length of $RCB_BCK_ROOT/$RCB_BCK_PREFIX
RSYNCRYPTO_TRIM_E="4"
#
# path length of $RCB_ENCR
RSYNCRYPTO_TRIM_D="2"
# TODO: use awk '{print patsplit($0, array , "/")}'

RCB_CRT_ROOT="/root/cert/backup"
RCB_KEYS="$RCB_CRT_ROOT/keys"
RCB_CRT="$RCB_CRT_ROOT/backup.crt"
RCB_NAMES="$RCB_CERT_ROOT/encrypted_names"

MAIL="/usr/bin/mail"
GZIP="/bin/gzip"
TAR="/bin/tar"
RSNAPSHOT="/usr/bin/rsnapshot"
RSYNCRYPTO="/usr/bin/rsyncrypto"

RSNAPSHOT_PARAM="-c /usr/local/etc/rsnapshot.conf"

# Whenever encrypting or deleting a file, write the file's name to
# logfile RSYNCRYPTO_EXPORT_CHANGES.  This allows passing logfile to
# rsync(1) using the --include-from rsync option.
RSYNCRYPTO_EXPORT_CHANGES="$RCB_META/.rsyncrypto-export-changes"
RSYNCRYPTO_PARAM_E="--name-encrypt=$RCB_NAMES --gzip=$GZIP --trim=$RSYNCRYPTO_TRIM_E --changed --export-changes=$RSYNCRYPTO_EXPORT_CHANGES"
RSYNCRYPTO_PARAM_D="--name-encrypt=$RCB_NAMES --gzip=$GZIP --trim=$RSYNCRYPTO_TRIM_D"

RSYNC="/usr/bin/rsync"
RSYNC_PARAM="--progress --delete -ahv"
# Warning from the man rsyncrypto about RSYNCRYPTO_EXPORT_CHANGES
# (logfile). rsync version 3 starts the actual file transfer while it
# is still transferring the file list, making the performance gain
# from logfile less noticeable. When using this option in conjunction
# with rsync, keep in mind that logfile is zeroed out before being
# written into. This means that unless there is at least one
# completely successful rsync operation for each rsyncrypto
# invocation, it is possible to have files that have been changed on
# disk by a previous invocation of rsyncrypto, but were over written
# by a later invocation and do not show up in the latest version of
# logfile. In other words, if rsyncrypto is run more than once
# between two completely success- ful invocations of rsync, it is
# possible for logfile not to be complete. Use this option at your
# own risk!
RSYNC_INCLUDE_FROM=true
RSYNC_INCLUDE_FROM_FILE="--include-from=$RSYNCRYPTO_EXPORT_CHANGES"

MTREE="/usr/bin/fmtree"
MTREE_PARAM="-c -k uname,gname,mode,time"
MTREE_SPEC=".rcb-mtree.txt"

FIND="/usr/bin/find"
RCB_EMPTYDIRS=".rcb-empty-dirs.txt"
RCB_LINKS=".rcb-links.txt"
RCB_LINKS_TAR=".rcb-links.tar"
RCB_SPECIALS=".rcb-specials.txt"

RCB_LOG_ROOT="/var/log"
RCB_LOG="$RCB_LOG_ROOT/rcb-central.log"

RCB_LOG_TEMP_ROOT="/tmp"
RCB_LOG_TEMP="$RCB_LOG_TEMP_ROOT/rcb-temp.log"
RCB_LOG_TEMP_RSYNC="$RCB_LOG_TEMP_ROOT/rcb-temp-rsync.log"
RCB_LOG_TEMP_ENC="$RCB_LOG_TEMP_ROOT/rcb-temp-encrypt.log"
RCB_LOG_TEMP_DEC="$RCB_LOG_TEMP_ROOT/rcb-temp-decrypt.log"
RCB_LOG_TEMP_RESTORE="$RCB_LOG_TEMP_ROOT/rcb-temp-restore.log"

# EOF
